{"version":3,"file":"vue-location-picker.min.js","sources":["../src/LocationPicker.vue","../src/InfoWindow.vue"],"sourcesContent":["<template>\n  <div class=\"LocationPicker\">\n    <div class=\"LocationPicker__map\" ref=\"map\"/>\n    <input type=\"text\" class=\"LocationPicker__autocomplete\" v-model=\"input\" ref=\"input\"/>\n    <info-window class=\"LocationPicker__info-window\" ref=\"info\"/>\n  </div>\n</template>\n\n<script>\n  import InfoWindow from './InfoWindow.vue'\n\n  export default {\n    props: ['value', 'config', 'options'],\n\n    data () {\n      return {\n        geocoder: null,\n        map: null,\n        marker: null,\n        infoWindow: null,\n        autocomplete: null,\n        input: ''\n      }\n    },\n\n    components: { InfoWindow },\n\n    mounted() {\n      if (!this.config.key) {\n        console.error('[Vue Location Picker warn]: You should give a Google Maps API key')\n        return\n      }\n\n      this.config.libraries = 'places'\n      this.config.callback = 'initLocationPicker'\n\n      // set the callback function\n      global.initLocationPicker = () => {\n        this.bootstrap(this.options || {})\n      }\n\n      // construct the url\n      var apiUrl = 'https://maps.googleapis.com/maps/api/js'\n      var params = Object.keys(this.config).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(this.config[key])}`)\n      var url = `${apiUrl}?${params.join('&')}`\n\n      // create and append the script to body\n      var script = document.createElement('script')\n      script.src = url\n      script.async = true\n      script.defer = true\n      document.body.appendChild(script)\n    },\n\n    methods: {\n      bootstrap(options) {\n        this.geocoder = new google.maps.Geocoder()\n\n        this.map = new google.maps.Map(this.$refs.map, Object.assign({\n          center: { lat: 0, lng: 0 },\n          zoom: 3,\n          disableDefaultUI: true\n        }, options.map))\n\n        this.marker = new google.maps.Marker(Object.assign({\n          map: this.map,\n          position: this.map.getCenter(),\n          draggable: true\n        }, options.marker))\n\n        this.infoWindow = new google.maps.InfoWindow(Object.assign({\n          content: this.$refs.info.$el\n        }, options.infoWindow))\n\n        this.autocomplete = new google.maps.places.Autocomplete(this.$refs.input, Object.assign({\n          types: ['geocode']\n        }, options.autocomplete))\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.$refs.input)\n\n        // events\n        google.maps.event.addListenerOnce(this.map, 'idle', this.openInfoWindow)\n        this.marker.addListener('dragstart', this.closeInfoWindow)\n        this.marker.addListener('dragend', this.geocodeLocation)\n        this.autocomplete.addListener('place_changed', this.moveMarker)\n      },\n\n      openInfoWindow () {\n        this.infoWindow.open(this.map, this.marker)\n      },\n\n      closeInfoWindow () {\n        this.infoWindow.close()\n      },\n\n      geocodeLocation (e) {\n        this.map.panTo(e.latLng)\n        this.input = ''\n\n        this.geocoder.geocode({'latLng': e.latLng}, (response) => {\n          if (response && response.length > 0) {\n            this.$emit('input', response[0])\n            this.$refs.info.showAddress(response[0])\n          } else {\n            this.$emit('input', null)\n            this.$refs.info.showError()\n          }\n\n          this.openInfoWindow()\n        })\n      },\n\n      moveMarker () {\n        var place = this.autocomplete.getPlace()\n        var location = place.geometry && place.geometry.location\n\n        if (location) {\n          this.$emit('input', place)\n          this.map.panTo(location)\n          this.marker.setPosition(location)\n          this.$refs.info.showAddress(place)\n        }\n      }\n    }\n  }\n</script>\n\n\n<style>\n  .LocationPicker,\n  .LocationPicker__map {\n    height: 100%;\n  }\n\n  .LocationPicker__autocomplete {\n    padding: 7px 14px;\n    margin: 10px;\n    width: 30%;\n    min-width: 300px;\n    font-family: Roboto;\n    font-size: 15px;\n    font-weight: 300;\n    text-overflow: ellipsis;\n    border: 0;\n    border-radius: 2px 0 0 2px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, .3);\n  }\n\n  .LocationPicker > .LocationPicker__autocomplete,\n  .LocationPicker > .LocationPicker__info-window {\n    display: none;\n  }\n</style>\n","<template>\n  <div>\n    <strong>{{ title }}</strong>\n    <p v-for=\"item in body\">{{ item }}</p>\n  </div>\n</template>\n\n\n<script>\n  export default {\n    data () {\n      return {\n        title: 'Instructions',\n        body: ['Click and drag this marker to pick your location.']\n      }\n    },\n\n    methods: {\n      showAddress (place) {\n        this.title = 'My address'\n        this.body = place.formatted_address.split(',').map(item => item.trim())\n      },\n\n      showError () {\n        this.title = 'Oups'\n        this.body = ['Google Maps could not determine the approximate postal address of this location.']\n      }\n    }\n  }\n</script>\n\n\n<style scoped>\n  div {\n    font-family: monospace;\n    color: #333;\n  }\n\n  p {\n    margin-bottom: 0;\n  }\n\n  p:not(:first-of-type) {\n    margin-top: 6px;\n  }\n</style>\n"],"names":["place","title","body","formatted_address","split","map","item","trim","this","config","key","libraries","callback","initLocationPicker","bootstrap","_this","options","params","Object","keys","encodeURIComponent","url","join","script","document","createElement","src","async","defer","appendChild","error","geocoder","google","maps","Geocoder","Map","$refs","assign","marker","Marker","getCenter","infoWindow","InfoWindow","info","$el","autocomplete","places","Autocomplete","input","controls","ControlPosition","TOP_LEFT","push","event","addListenerOnce","openInfoWindow","addListener","closeInfoWindow","geocodeLocation","moveMarker","open","close","e","panTo","latLng","geocode","response","length","$emit","showAddress","showError","getPlace","location","geometry","setPosition"],"mappings":";;;;;0uBAYU,QAAS,SAAU,2CAIb,SACL,YACG,gBACI,kBACE,WACP,iSCTA,qBACA,qFAKIA,QACNC,MAAQ,kBACRC,KAAOF,EAAMG,kBAAkBC,MAAM,KAAKC,IAAI,mBAAQC,EAAKC,oCAI3DN,MAAQ,YACRC,MAAQ,yHDGVM,KAAKC,OAAOC,UAKZD,OAAOE,UAAY,cACnBF,OAAOG,SAAW,4BAGhBC,mBAAqB,aACrBC,UAAUC,EAAKC,kBAKlBC,EAASC,OAAOC,KAAKX,KAAKC,QAAQJ,IAAI,SAACK,mBAAWU,mBAAmBV,eAAQU,mBAAmBL,EAAKN,OAAOC,OAC5GW,YAFS,sDAEUJ,EAAOK,KAAK,MAG/BC,EAASC,SAASC,cAAc,YAC7BC,IAAML,IACNM,OAAQ,IACRC,OAAQ,WACN1B,KAAK2B,YAAYN,gBAtBhBO,MAAM,kGA0BNd,QACHe,SAAW,IAAIC,OAAOC,KAAKC,cAE3B7B,IAAM,IAAI2B,OAAOC,KAAKE,IAAI3B,KAAK4B,MAAM/B,IAAKa,OAAOmB,oBACrC,MAAQ,QACjB,oBACY,GACjBrB,EAAQX,WAENiC,OAAS,IAAIN,OAAOC,KAAKM,OAAOrB,OAAOmB,YACrC7B,KAAKH,aACAG,KAAKH,IAAImC,uBACR,GACVxB,EAAQsB,cAENG,WAAa,IAAIT,OAAOC,KAAKS,WAAWxB,OAAOmB,gBACzC7B,KAAK4B,MAAMO,KAAKC,KACxB5B,EAAQyB,kBAENI,aAAe,IAAIb,OAAOC,KAAKa,OAAOC,aAAavC,KAAK4B,MAAMY,MAAO9B,OAAOmB,eACvE,YACPrB,EAAQ6B,oBACNxC,IAAI4C,SAASjB,OAAOC,KAAKiB,gBAAgBC,UAAUC,KAAK5C,KAAK4B,MAAMY,cAGjEf,KAAKoB,MAAMC,gBAAgB9C,KAAKH,IAAK,OAAQG,KAAK+C,qBACpDjB,OAAOkB,YAAY,YAAahD,KAAKiD,sBACrCnB,OAAOkB,YAAY,UAAWhD,KAAKkD,sBACnCb,aAAaW,YAAY,gBAAiBhD,KAAKmD,4CAI/ClB,WAAWmB,KAAKpD,KAAKH,IAAKG,KAAK8B,yCAI/BG,WAAWoB,kCAGDC,mBACVzD,IAAI0D,MAAMD,EAAEE,aACZhB,MAAQ,QAERjB,SAASkC,gBAAmBH,EAAEE,QAAS,SAACE,GACvCA,GAAYA,EAASC,OAAS,KAC3BC,MAAM,QAASF,EAAS,MACxB9B,MAAMO,KAAK0B,YAAYH,EAAS,QAEhCE,MAAM,QAAS,QACfhC,MAAMO,KAAK2B,eAGbf,8CAKHvD,EAAQQ,KAAKqC,aAAa0B,WAC1BC,EAAWxE,EAAMyE,UAAYzE,EAAMyE,SAASD,SAE5CA,SACGJ,MAAM,QAASpE,QACfK,IAAI0D,MAAMS,QACVlC,OAAOoC,YAAYF,QACnBpC,MAAMO,KAAK0B,YAAYrE"}