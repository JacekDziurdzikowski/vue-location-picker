{"version":3,"file":"vue-location-picker.min.js","sources":["../src/LocationPicker.vue","../src/InfoWindow.vue"],"sourcesContent":["<template>\n  <div class=\"LocationPicker\" v-if=\"isOpen\">\n    <div class=\"LocationPicker__map\" ref=\"map\"/>\n    <input type=\"text\" class=\"LocationPicker__autocomplete\" ref=\"input\"/>\n    <info-window class=\"LocationPicker__info-window\" ref=\"info\"/>\n  </div>\n</template>\n\n<script>\n  import InfoWindow from './InfoWindow.vue';\n\n  export default {\n    props: ['value', 'config', 'options', 'isOpen'],\n\n    data() {\n      return {\n        geocoder: null,\n        map: null,\n        marker: null,\n        infoWindow: null,\n        autocomplete: null,\n        input: ''\n      };\n    },\n\n    components: { InfoWindow },\n\n    mounted() {\n      if (typeof google !== 'undefined') this.bootstrap(this.options);\n      else this.importGoogle();\n    },\n\n    methods: {\n      importGoogle() {\n        if (!this.config.key) {\n          console.error('[Vue Location Picker warn]: You should give a Google Maps API key');\n          return;\n        }\n\n        this.config.libraries = 'places';\n        this.config.callback = 'initLocationPicker';\n\n        // set the callback function\n        global.initLocationPicker = () => this.bootstrap(this.options);\n\n        // construct the url\n        const apiUrl = 'https://maps.googleapis.com/maps/api/js';\n        const params = Object.keys(this.config).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(this.config[key])}`);\n        const url = `${apiUrl}?${params.join('&')}`;\n\n        // create and append the script to body\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.defer = true;\n        document.body.appendChild(script);\n      },\n\n      bootstrap(options = {}) {\n        this.geocoder = new google.maps.Geocoder();\n\n        this.map = new google.maps.Map(this.$refs.map, Object.assign({\n          center: { lat: Number(this.value.latitude) || 0, lng: Number(this.value.longitude) || 0 },\n          zoom: 6\n        }, options.map));\n\n        this.marker = new google.maps.Marker(Object.assign({\n          map: this.map,\n          position: this.map.getCenter(),\n          draggable: true\n        }, options.marker));\n\n        this.infoWindow = new google.maps.InfoWindow(Object.assign({ content: this.$refs.info.$el }, options.infoWindow));\n\n        this.autocomplete = new google.maps.places.Autocomplete(this.$refs.input, Object.assign({ types: ['geocode'] }, options.autocomplete));\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(this.$refs.input);\n\n        google.maps.event.addListenerOnce(this.map, 'idle', this.openInfoWindow);\n        this.marker.addListener('dragstart', this.closeInfoWindow);\n        this.marker.addListener('dragend', this.geocodeLocation);\n        this.autocomplete.addListener('place_changed', this.moveMarker);\n\n        this.syncAddress();\n      },\n\n      openInfoWindow() {\n        this.infoWindow.open(this.map, this.marker);\n      },\n\n      closeInfoWindow() {\n        this.infoWindow.close();\n      },\n\n      geocodeLocation(e) {\n        this.map.panTo(e.latLng);\n        this.geocoder.geocode({ latLng: e.latLng }, (response) => {\n          if (response && response.length > 0) this.goTo(response[0]);\n          else {\n            this.goTo(null);\n            if (this.$refs.info) this.$refs.info.showError();\n          }\n\n          this.openInfoWindow();\n        });\n      },\n\n      moveMarker() {\n        const place = this.autocomplete.getPlace();\n        const location = place.geometry && place.geometry.location;\n        if (location) this.goTo(place);\n      },\n\n      syncAddress() {\n        if (!this.value || !this.value.longitude || !this.value.latitude) return;\n        this.geocoder.geocode({ latLng: { lat: Number(this.value.latitude) || 0, lng: Number(this.value.longitude) || 0 } }, (response) => {\n          if (response && response.length > 0) this.goTo(response[0]);\n          else {\n            this.goTo(null);\n            if (this.$refs.info) this.$refs.info.showError();\n          }\n\n          this.openInfoWindow();\n        });\n      },\n\n      goTo(location) {\n        if (!location) {\n          this.$emit('input', {\n            address: null,\n            longitude: null,\n            latitude: null\n          });\n        }\n        else {\n          this.$emit('input', {\n            address: location.formatted_address,\n            longitude: location.geometry.location.lng(),\n            latitude: location.geometry.location.lat()\n          });\n          if (this.$refs.info) this.$refs.info.showAddress(location);\n          this.map.panTo(location.geometry.location);\n          this.marker.setPosition(location.geometry.location);\n        }\n      }\n    },\n\n    watch: {\n      isOpen() {\n        if (this.isOpen) this.syncAddress();\n      }\n    }\n  };\n</script>\n\n\n<style>\n  .LocationPicker,\n  .LocationPicker__map {\n    height: 100%;\n  }\n\n  .LocationPicker__autocomplete {\n    padding: 7px 14px;\n    margin: 10px;\n    width: 30%;\n    min-width: 300px;\n    font-family: Roboto;\n    font-size: 15px;\n    font-weight: 300;\n    text-overflow: ellipsis;\n    border: 0;\n    border-radius: 2px 0 0 2px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, .3);\n  }\n\n  .LocationPicker > .LocationPicker__autocomplete,\n  .LocationPicker > .LocationPicker__info-window {\n    display: none;\n  }\n</style>\n","<template>\n  <div>\n    <p v-for=\"item in body\">{{ item }}</p>\n  </div>\n</template>\n\n\n<script>\n  export default {\n    data() {\n      return {\n        title: 'Instructions',\n        body: ['Click and drag this marker to pick your location.']\n      };\n    },\n\n    methods: {\n      showAddress(place) {\n        this.body = place.formatted_address.split(',').map(item => item.trim());\n      },\n\n      showError() {\n        this.body = ['Google Maps could not determine the approximate postal address of this location.'];\n      }\n    }\n  };\n</script>\n\n\n<style scoped>\n  div {\n    font-family: monospace;\n    color: #333;\n  }\n\n  p {\n    margin-bottom: 0;\n  }\n\n  p:not(:first-of-type) {\n    margin-top: 6px;\n  }\n</style>\n"],"names":["place","body","formatted_address","split","map","item","trim","google","this","bootstrap","options","importGoogle","config","key","libraries","callback","initLocationPicker","_this","params","Object","keys","encodeURIComponent","url","join","script","document","createElement","src","async","defer","appendChild","error","geocoder","maps","Geocoder","Map","$refs","assign","Number","value","latitude","longitude","marker","Marker","getCenter","infoWindow","InfoWindow","info","$el","autocomplete","places","Autocomplete","input","controls","ControlPosition","TOP_LEFT","push","event","addListenerOnce","openInfoWindow","addListener","closeInfoWindow","geocodeLocation","moveMarker","syncAddress","open","close","e","panTo","latLng","geocode","response","length","_this2","goTo","showError","getPlace","geometry","location","_this3","$emit","lng","lat","showAddress","setPosition","isOpen"],"mappings":"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"}